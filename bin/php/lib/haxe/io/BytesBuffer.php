<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace haxe\io;

use \haxe\io\_BytesData\Container;
use \php\Boot;

class BytesBuffer {
	/**
	 * @var mixed
	 */
	public $b;

	/**
	 * @return void
	 */
	public function __construct () {
		#/usr/share/haxe/std/php/_std/haxe/io/BytesBuffer.hx:33: characters 3-9
		$this->b = "";
	}

	/**
	 * @return Bytes
	 */
	public function getBytes () {
		#/usr/share/haxe/std/php/_std/haxe/io/BytesBuffer.hx:77: characters 41-47
		$bytes = strlen($this->b);
		#/usr/share/haxe/std/php/_std/haxe/io/BytesBuffer.hx:77: characters 3-52
		$bytes1 = new Bytes($bytes, new Container($this->b));
		#/usr/share/haxe/std/php/_std/haxe/io/BytesBuffer.hx:78: characters 3-11
		$this->b = null;
		#/usr/share/haxe/std/php/_std/haxe/io/BytesBuffer.hx:79: characters 3-15
		return $bytes1;
	}
}

Boot::registerClass(BytesBuffer::class, 'haxe.io.BytesBuffer');
