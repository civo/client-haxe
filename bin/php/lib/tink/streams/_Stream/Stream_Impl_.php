<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\streams\_Stream;

use \php\Boot;
use \tink\streams\Single;
use \tink\core\TypedError;
use \tink\streams\StreamObject;
use \tink\core\_Lazy\LazyConst;
use \tink\streams\FutureStream;
use \tink\core\_Future\FutureObject;

final class Stream_Impl_ {

	/**
	 * @param FutureObject $f
	 * 
	 * @return StreamObject
	 */
	public static function flatten ($f) {
		#/home/jahred/haxelib/tink_streams/0,3,2/src/tink/streams/Stream.hx:33: characters 5-31
		return new FutureStream($f);
	}

	/**
	 * @param TypedError $e
	 * 
	 * @return StreamObject
	 */
	public static function ofError ($e) {
		#/home/jahred/haxelib/tink_streams/0,3,2/src/tink/streams/Stream.hx:59: characters 5-30
		return new ErrorStream($e);
	}

	/**
	 * @param mixed $i
	 * 
	 * @return StreamObject
	 */
	public static function single ($i) {
		#/home/jahred/haxelib/tink_streams/0,3,2/src/tink/streams/Stream.hx:18: characters 5-25
		return new Single(new LazyConst($i));
	}
}

Boot::registerClass(Stream_Impl_::class, 'tink.streams._Stream.Stream_Impl_');
