<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\http;

use \tink\http\clients\SecureSocketClient;
use \tink\http\_Client\CustomClient;
use \php\_Boot\HxAnon;
use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\http\clients\CurlClient;
use \tink\io\_Source\Source_Impl_;
use \tink\core\Outcome;
use \tink\core\_Lazy\LazyConst;
use \tink\http\clients\StdClient;
use \tink\core\_Future\Future_Impl_;
use \tink\_Url\Url_Impl_;
use \tink\core\_Promise\Promise_Impl_;
use \haxe\ds\EnumValueMap;
use \tink\http\clients\SecureCurlClient;
use \tink\http\clients\SocketClient;
use \tink\http\clients\LocalContainerClient;
use \tink\core\_Future\FutureObject;
use \tink\http\clients\PhpClient;

class Fetch {
	/**
	 * @var EnumValueMap
	 */
	static public $client;
	/**
	 * @var EnumValueMap
	 */
	static public $sclient;

	/**
	 * @param object $url
	 * @param object $options
	 * 
	 * @return FutureObject
	 */
	public static function fetch ($url, $options = null) {
		#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:27: lines 27-68
		return Future_Impl_::async(function ($cb)  use (&$url, &$options) {
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:29: characters 4-30
			$uri = $url->path;
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:30: characters 4-48
			if ($url->query !== null) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:30: characters 26-48
				$uri = ($uri??'null') . "?" . ($url->query??'null');
			}
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:32: characters 4-21
			$method = "GET";
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:33: characters 4-23
			$headers = null;
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:34: characters 4-40
			$body = Source_Impl_::$EMPTY;
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:35: characters 4-23
			$type = ClientType::Default();
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:36: characters 4-30
			$followRedirect = true;
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:38: lines 38-44
			if ($options !== null) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:39: characters 5-55
				if ($options->method !== null) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:39: characters 32-55
					$method = $options->method;
				}
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:40: characters 5-58
				if ($options->headers !== null) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:40: characters 33-58
					$headers = $options->headers;
				}
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:41: characters 5-49
				if ($options->body !== null) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:41: characters 30-49
					$body = $options->body;
				}
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:42: characters 5-53
				if ($options->client !== null) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:42: characters 32-53
					$type = $options->client;
				}
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:43: characters 5-63
				if ($options->followRedirect === false) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:43: characters 41-63
					$followRedirect = false;
				}
			}
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:46: characters 4-56
			$client = Fetch::getClient($type, $url->scheme === "https");
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:48: lines 48-49
			if (($options !== null) && ($options->augment !== null)) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:49: characters 14-45
				$pipeline = $options->augment;
				$client = CustomClient::create($client, $pipeline->before, $pipeline->after);
			}
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:51: lines 51-67
			$client->request(new OutgoingRequest(new OutgoingRequestHeader($method, $url, null, $headers), $body))->handle(function ($res)  use (&$followRedirect, &$url, &$cb, &$options) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:55: lines 55-66
				$__hx__switch = ($res->index);
				if ($__hx__switch === 0) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:56: characters 19-22
					$res1 = $res->params[0];
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:57: characters 14-35
					$_g = $res1->header->statusCode;
					if ($_g === 301 || $_g === 302 || $_g === 303 || $_g === 307 || $_g === 308) {
						#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:58: characters 13-47
						$code = $_g;
						#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:58: lines 58-62
						if ($followRedirect) {
							#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:59: characters 22-32
							$res2 = $res1->header;
							#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:59: characters 41-49
							$this1 = mb_strtolower("location");
							#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:59: lines 59-61
							Promise_Impl_::next(new SyncFuture(new LazyConst($res2->byName($this1))), function ($location)  use (&$url, &$code, &$options) {
								#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:60: characters 48-69
								$this2 = Url_Impl_::resolve($url, Url_Impl_::fromString($location));
								#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:60: characters 71-123
								$this3 = null;
								if ($code === 303) {
									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:60: characters 85-113
									$__ret = new HxAnon(["method" => "GET"]);
									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:116: characters 2-21
									$_g1 = $options->augment;
									#(unknown)
									if ($_g1 !== null) {
										#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:116: characters 2-21
										$v = $_g1;
										$__ret->augment = $v;
									}

									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:113: characters 2-19
									$_g11 = $options->body;
									#(unknown)
									if ($_g11 !== null) {
										#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:113: characters 2-19
										$v1 = $_g11;
										$__ret->body = $v1;
									}

									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:114: characters 2-20
									$_g2 = $options->client;
									#(unknown)
									if ($_g2 !== null) {
										#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:114: characters 2-20
										$v2 = $_g2;
										$__ret->client = $v2;
									}

									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:115: characters 2-22
									$_g3 = $options->followRedirect;
									#(unknown)
									if ($_g3 !== null) {
										#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:115: characters 2-22
										$v3 = $_g3;
										$__ret->followRedirect = $v3;
									}

									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:112: characters 2-29
									$_g4 = $options->headers;
									#(unknown)
									if ($_g4 !== null) {
										#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:112: characters 2-29
										$v4 = $_g4;
										$__ret->headers = $v4;
									}


									#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:60: characters 71-123
									$this3 = $__ret;
								} else {
									$this3 = $options;
								}
								#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:60: characters 35-124
								return Fetch::fetch($this2, $this3);
							})->handle($cb);
						} else {
							#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:62: characters 17-33
							$cb(Outcome::Success($res1));
						}
					} else {
						$cb(Outcome::Success($res1));
					}

				} else if ($__hx__switch === 1) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:64: characters 19-20
					$e = $res->params[0];
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:65: characters 7-21
					$cb(Outcome::Failure($e));
				}
			});
		});
	}

	/**
	 * @param ClientType $type
	 * @param bool $secure
	 * 
	 * @return ClientObject
	 */
	public static function getClient ($type, $secure) {
		#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:72: characters 3-41
		$cache = ($secure ? Fetch::$sclient : Fetch::$client);
		#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:74: lines 74-103
		if (!$cache->exists($type)) {
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:76: lines 76-99
			$c = null;
			$__hx__switch = ($type->index);
			if ($__hx__switch === 0) {
				$c = ($secure ? new SecureSocketClient() : new SocketClient());
			} else if ($__hx__switch === 1) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:90: characters 16-17
				$c1 = $type->params[0];
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:76: lines 76-99
				$c = new LocalContainerClient($c1);
			} else if ($__hx__switch === 2) {
				$c = ($secure ? new SecureCurlClient() : new CurlClient());
			} else if ($__hx__switch === 3) {
				$c = ($secure ? new StdClient() : new StdClient());
			} else if ($__hx__switch === 4) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:93: characters 17-18
				$c2 = $type->params[0];
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:76: lines 76-99
				$c = $c2;
			} else if ($__hx__switch === 5) {
				$c = ($secure ? new PhpClient() : new PhpClient());
			}
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:102: characters 4-22
			$cache->set($type, $c);
		}
		#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx:105: characters 3-25
		return $cache->get($type);
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$client = new EnumValueMap();
		self::$sclient = new EnumValueMap();
	}
}

Boot::registerClass(Fetch::class, 'tink.http.Fetch');
Fetch::__hx__init();
