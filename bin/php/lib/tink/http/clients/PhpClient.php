<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\http\clients;

use \php\_Boot\HxAnon;
use \tink\http\HeaderField;
use \sys\io\FileInput;
use \php\Boot;
use \tink\http\IncomingResponse;
use \tink\streams\Single;
use \tink\chunk\ByteChunk;
use \tink\core\Outcome;
use \tink\http\ResponseHeaderBase;
use \tink\core\_Lazy\LazyConst;
use \php\_Boot\HxString;
use \tink\core\_Future\Future_Impl_;
use \tink\_Url\Url_Impl_;
use \tink\http\ClientObject;
use \tink\http\OutgoingRequest;
use \tink\core\_Future\FutureObject;
use \tink\io\IdealSourceTools;
use \_Array\ArrayIterator;

class PhpClient implements ClientObject {
	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @param OutgoingRequest $req
	 * 
	 * @return FutureObject
	 */
	public function request ($req) {
		#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:16: lines 16-63
		return Future_Impl_::async(function ($cb)  use (&$req) {
			#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:17: lines 17-62
			IdealSourceTools::all($req->body)->handle(function ($chunk)  use (&$req, &$cb) {
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:21: characters 25-60
				$_g = new \Array_hx();
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:21: characters 35-45
				$h = new ArrayIterator($req->header->fields);
				while ($h->hasNext()) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:21: characters 26-59
					$h1 = $h->next();
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:21: characters 47-59
					$x = $h1->toString();
					$_g->arr[$_g->length] = $x;
					++$_g->length;
				}

				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:21: characters 25-82
				$ob = ($_g->join("\x0D\x0A")??'null') . "\x0D\x0A";
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:22: characters 25-42
				$req1 = $req->header->method;
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:18: lines 18-25
				$options = ((array)(new HxAnon(["http" => ((array)(new HxAnon([
					"header" => $ob,
					"method" => $req1,
					"content" => $chunk->toBytes()->b->s,
				])))])));
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:27: characters 13-154
				$context = stream_context_create($options);
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:28: characters 13-45
				$url = Url_Impl_::toString($req->header->url);
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:30: lines 30-31
				$result = new FileInput(fopen($url, "rb", false, $context));
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:33: characters 13-148
				$rawHeaders = \Array_hx::wrap($http_response_header);
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:37: characters 13-39
				$i = $rawHeaders->length;
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:38: characters 13-72
				while ($i-- >= 0) {
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:38: characters 29-72
					if (\StringTools::startsWith(($rawHeaders->arr[$i] ?? null), "HTTP/")) {
						#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:38: characters 67-72
						break;
					}
				}
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:39: characters 13-45
				$rawHeaders = $rawHeaders->slice($i);
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:42: characters 13-49
				$head = HxString::split(($rawHeaders->arr[0] ?? null), " ");
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:43: lines 43-51
				$_g1 = new \Array_hx();
				$_g2 = 1;
				$_g3 = $rawHeaders->length;
				while ($_g2 < $_g3) {
					$i1 = $_g2++;
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:44: characters 15-40
					$line = ($rawHeaders->arr[$i1] ?? null);
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:45: characters 15-46
					$index = HxString::indexOf($line, ": ");
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:46: characters 15-48
					$name = mb_substr($line, 0, $index);
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:48: characters 17-21
					$this1 = mb_strtolower($name);
					#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:47: lines 47-50
					$x1 = new HeaderField($this1, mb_substr($line, $index + 2, null));
					$_g1->arr[$_g1->length] = $x1;
					++$_g1->length;

				}

				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:43: lines 43-51
				$headers = $_g1;
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:53: characters 26-102
				$statusCode = \Std::parseInt(($head->arr[1] ?? null));
				$this2 = new ResponseHeaderBase($statusCode, $head->slice(2)->join(" "), $headers, "HTTP/1.1");
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:53: characters 13-103
				$header = $this2;
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:54: characters 16-71
				$tmp = Outcome::Success(new IncomingResponse($header, new Single(new LazyConst(ByteChunk::of($result->readAll())))));
				#/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/PhpClient.hx:54: characters 13-72
				$cb($tmp);
			});
		});
	}
}

Boot::registerClass(PhpClient::class, 'tink.http.clients.PhpClient');
