<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\core\_Promise;

use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\core\Outcome;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Future\FutureObject;

final class Promise_Impl_ {
	/**
	 * @param FutureObject $this
	 * @param \Closure $f
	 * @param bool $gather
	 * 
	 * @return FutureObject
	 */
	public static function next ($this1, $f, $gather = true) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:58: lines 58-61
		if ($gather === null) {
			$gather = true;
		}
		$gather1 = $gather;
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:50: characters 66-70
		if ($gather1 === null) {
			$gather1 = true;
		}
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:58: lines 58-61
		$ret = $this1->flatMap(function ($o)  use (&$f) {
			$__hx__switch = ($o->index);
			if ($__hx__switch === 0) {
				#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:59: characters 22-23
				$d = $o->params[0];
				#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:59: characters 26-30
				return $f($d);
			} else if ($__hx__switch === 1) {
				#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:60: characters 22-23
				$f1 = $o->params[0];
				#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:60: characters 26-49
				return new SyncFuture(new LazyConst(Outcome::Failure($f1)));
			}
		});
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx:58: lines 58-61
		if ($gather1) {
			return $ret->gather();
		} else {
			return $ret;
		}
	}
}

Boot::registerClass(Promise_Impl_::class, 'tink.core._Promise.Promise_Impl_');
