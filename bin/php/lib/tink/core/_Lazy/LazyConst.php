<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\core\_Lazy;

use \php\Boot;

class LazyConst implements LazyObject {
	/**
	 * @var mixed
	 */
	public $value;

	/**
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function __construct ($value) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx:32: characters 5-23
		$this->value = $value;
	}

	/**
	 * @return mixed
	 */
	public function get () {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx:35: characters 5-17
		return $this->value;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return LazyObject
	 */
	public function map ($f) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx:37: lines 37-38
		$_gthis = $this;
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx:38: characters 5-53
		return new LazyFunc(function ()  use (&$f, &$_gthis) {
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx:38: characters 37-52
			return $f($_gthis->value);
		});
	}
}

Boot::registerClass(LazyConst::class, 'tink.core._Lazy.LazyConst');
