<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\core\_Future;

use \php\Boot;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\FutureTrigger;

final class Future_Impl_ {
	/**
	 *  Creates an async future
	 *  Example: `var i = Future.async(function(cb) cb(1)); // Future<Int>`
	 * 
	 * @param \Closure $f
	 * @param bool $lazy
	 * 
	 * @return FutureObject
	 */
	public static function async ($f, $lazy = false) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:136: lines 136-143
		if ($lazy === null) {
			$lazy = false;
		}
		if ($lazy) {
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:137: characters 7-32
			return new LazyTrigger($f);
		} else {
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:139: characters 7-26
			$op = new FutureTrigger();
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:140: characters 7-41
			$wrapped = $f;
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:141: characters 7-33
			Callback_Impl_::invoke($wrapped, Boot::getInstanceClosure($op, 'trigger'));
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:142: characters 7-16
			return $op;
		}
	}

	/**
	 *  Flattens `Future<Future<A>>` into `Future<A>`
	 * 
	 * @param FutureObject $f
	 * 
	 * @return FutureObject
	 */
	public static function flatten ($f) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:76: characters 5-31
		return new NestedFuture($f);
	}

	/**
	 *  Like `map` and `flatMap` but with a polymorphic transformer and return a `Promise`
	 *  @see `Next`
	 * 
	 * @param FutureObject $this
	 * @param \Closure $n
	 * 
	 * @return FutureObject
	 */
	public static function next ($this1, $n) {
		#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:62: characters 5-50
		return $this1->flatMap(function ($v)  use (&$n) {
			#/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx:62: characters 38-49
			return $n($v);
		});
	}
}

Boot::registerClass(Future_Impl_::class, 'tink.core._Future.Future_Impl_');
