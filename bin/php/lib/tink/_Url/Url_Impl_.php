<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\_Url;

use \php\_Boot\HxAnon;
use \php\Boot;
use \tink\url\_Path\Path_Impl_;
use \php\_Boot\HxString;
use \tink\url\_Host\Host_Impl_;

final class Url_Impl_ {

	/**
	 * @param string $s
	 * 
	 * @return object
	 */
	public static function fromString ($s) {
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:86: characters 51-66
		return Url_Impl_::parse($s);
	}

	/**
	 * @param object $parts
	 * 
	 * @return void
	 */
	public static function makePayload ($parts) {
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:53: characters 5-22
		$payload = "";
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:55: characters 12-17
		$_g7 = $parts->scheme;
		$_g6 = $parts->query;
		$_g5 = $parts->payload;
		$_g4 = $parts->path;
		$_g3 = $parts->hosts;
		$_g2 = $parts->host;
		$_g1 = $parts->hash;
		$_g = $parts->auth;
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:56: lines 56-62
		if ($_g === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:56: lines 56-58
			if ($_g2 !== null) {
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:57: characters 32-36
				$host = $_g2;
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:58: characters 9-29
				$payload = ($payload??'null') . "//" . ($host??'null');
			}
		} else if ($_g2 === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:59: characters 20-24
			$auth = $_g;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:60: characters 9-29
			$payload = ($payload??'null') . "//" . ((($auth === null ? "" : "" . ($auth??'null') . "@"))??'null');
		} else {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:61: characters 20-24
			$auth1 = $_g;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:61: characters 32-36
			$host1 = $_g2;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:62: characters 9-34
			$payload = ($payload??'null') . "//" . ((($auth1 === null ? "" : "" . ($auth1??'null') . "@"))??'null') . ($host1??'null');
		}

		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:65: characters 5-26
		$payload = ($payload??'null') . ($parts->path??'null');
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:67: characters 12-23
		$_g8 = $parts->query;
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:68: lines 68-69
		if ($_g8 !== null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:69: characters 12-13
			$v = $_g8;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:69: characters 15-31
			$payload = ($payload??'null') . "?" . ($v??'null');
		}

		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:72: characters 12-22
		$_g9 = $parts->hash;
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:73: lines 73-74
		if ($_g9 !== null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:74: characters 12-13
			$v1 = $_g9;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:74: characters 15-31
			$payload = ($payload??'null') . "#" . ($v1??'null');
		}

		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:77: characters 21-55
		$parts->payload = $payload;
	}

	/**
	 * @param string $_
	 * 
	 * @return void
	 */
	public static function noop ($_) {
	}

	/**
	 * @param string $s
	 * @param \Closure $onError
	 * 
	 * @return object
	 */
	public static function parse ($s, $onError = null) {
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:90: lines 90-91
		if ($s === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:91: characters 7-23
			return Url_Impl_::parse("");
		}
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:93: lines 93-94
		if ($onError === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:94: characters 7-21
			$onError = Boot::getStaticClosure(Url_Impl_::class, 'noop');
		}
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:96: characters 5-17
		$s = trim($s);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:98: lines 98-99
		if (\StringTools::startsWith($s, "data:")) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:99: characters 14-65
			$this1 = new HxAnon([
				"scheme" => "data",
				"payload" => mb_substr($s, 5, null),
			]);
			return $this1;
		}
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:101: characters 5-114
		$FORMAT = new \EReg("^(([a-zA-Z][a-zA-Z0-9\\-+.]*):)?((//(([^@/]+)@)?([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?)\$", "");
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:102: characters 5-48
		$HOST = new \EReg("^(\\[(.*)\\]|([^:]*))(:(.*))?\$", "");
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:105: characters 5-20
		$FORMAT->match($s);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:107: lines 107-131
		$hosts = null;
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:107: characters 24-49
		$_g = $FORMAT->matched(7);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:108: lines 108-130
		if ($_g === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:107: lines 107-131
			$hosts = new \Array_hx();
		} else {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:109: characters 14-15
			$v = $_g;
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:110: lines 110-130
			$_g1 = new \Array_hx();
			$_g11 = 0;
			$_g2 = HxString::split($v, ",");
			while ($_g11 < $_g2->length) {
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:110: characters 18-22
				$host = ($_g2->arr[$_g11] ?? null);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:110: lines 110-130
				++$_g11;
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:111: characters 15-31
				$HOST->match($host);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: lines 112-118
				$host1 = null;
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: characters 51-66
				$_g12 = $HOST->matched(2);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: characters 34-49
				$_g21 = $HOST->matched(3);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:113: lines 113-117
				if ($_g12 === null) {
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:113: characters 25-29
					$ipv4 = $_g21;
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: lines 112-118
					$host1 = $ipv4;
				} else if ($_g21 === null) {
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:114: characters 31-35
					$ipv6 = $_g12;
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: lines 112-118
					$host1 = "[" . ($ipv6??'null') . "]";
				} else {
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:116: characters 21-50
					$onError("invalid host " . ($host??'null'));
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:112: lines 112-118
					$host1 = null;
				}
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:119: lines 119-128
				$port = null;
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:119: characters 33-48
				$_g3 = $HOST->matched(5);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:120: lines 120-127
				if ($_g3 === null) {
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:119: lines 119-128
					$port = null;
				} else {
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:121: characters 24-25
					$v1 = $_g3;
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:122: characters 30-45
					$_g31 = \Std::parseInt($v1);
					#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:123: lines 123-126
					if ($_g31 === null) {
						#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:124: characters 29-55
						$onError("invalid port " . ($v1??'null'));
						#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:119: lines 119-128
						$port = null;
					} else {
						#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:126: characters 32-33
						$p = $_g31;
						#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:119: lines 119-128
						$port = $p;
					}
				}
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:129: characters 15-35
				$x = Host_Impl_::_new($host1, $port);
				$_g1->arr[$_g1->length] = $x;
				++$_g1->length;

			}

			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:107: lines 107-131
			$hosts = $_g1;
		}
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:132: characters 5-37
		$path = $FORMAT->matched(8);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:134: lines 134-135
		if (($hosts->length > 0) && (mb_substr($path, 0, 1) !== "/")) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:135: characters 7-22
			$path = "/" . ($path??'null');
		}
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:138: characters 15-37
		$parts = $FORMAT->matched(2);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:139: characters 16-39
		$parts1 = $FORMAT->matched(3);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:140: characters 13-21
		$hosts1 = ($hosts->arr[0] ?? null);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:142: characters 13-38
		$parts2 = $FORMAT->matched(6);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:143: characters 13-17
		$parts3 = Path_Impl_::ofString($path);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:144: characters 14-35
		$parts4 = $FORMAT->matched(10);
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:137: lines 137-146
		$this2 = new HxAnon([
			"scheme" => $parts,
			"payload" => $parts1,
			"host" => $hosts1,
			"hosts" => $hosts,
			"auth" => $parts2,
			"path" => $parts3,
			"query" => $parts4,
			"hash" => $FORMAT->matched(12),
		]);
		return $this2;
	}

	/**
	 * @param object $this
	 * @param object $that
	 * 
	 * @return object
	 */
	public static function resolve ($this1, $that) {
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:27: lines 27-49
		if ($that->scheme !== null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:27: characters 32-36
			return $that;
		} else if ($that->host !== null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:29: lines 29-34
			if ($that->scheme !== null) {
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:29: characters 34-38
				return $that;
			} else {
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:31: characters 11-41
				$copy = \Reflect::copy($that);
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:32: characters 27-52
				$copy->scheme = $this1->scheme;
				#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:33: characters 11-22
				return $copy;
			}
		} else {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:37: characters 17-42
			$parts = Path_Impl_::join($this1->path, $that->path);
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:36: lines 36-44
			$parts1 = new HxAnon([
				"path" => $parts,
				"payload" => "",
				"scheme" => $this1->scheme,
				"query" => $that->query,
				"auth" => $this1->auth,
				"host" => $this1->host,
				"hash" => $that->hash,
			]);
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:46: characters 9-27
			Url_Impl_::makePayload($parts1);
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:48: characters 16-30
			$this2 = $parts1;
			return $this2;
		}
	}

	/**
	 * @param object $this
	 * 
	 * @return string
	 */
	public static function toString ($this1) {
		#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:82: lines 82-83
		if ($this1->scheme === null) {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:82: characters 18-30
			return $this1->payload;
		} else {
			#/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx:83: characters 17-46
			return "" . ($this1->scheme??'null') . ":" . ($this1->payload??'null');
		}
	}
}

Boot::registerClass(Url_Impl_::class, 'tink._Url.Url_Impl_');
