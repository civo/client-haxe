<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace tink\io\_Sink;

use \tink\io\SinkObject;
use \php\Boot;
use \haxe\io\Output;
use \tink\io\_Worker\Worker_Impl_;
use \tink\io\std\OutputSink;

final class SinkYielding_Impl_ {
	/**
	 * @param string $name
	 * @param Output $target
	 * @param object $options
	 * 
	 * @return SinkObject
	 */
	public static function ofOutput ($name, $target, $options = null) {
		#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:52: lines 52-55
		$tmp = null;
		if ($options === null) {
			$tmp = Worker_Impl_::get();
		} else {
			#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:52: characters 60-67
			$_g = $options->worker;
			#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:53: lines 53-54
			if ($_g === null) {
				#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:52: lines 52-55
				$tmp = Worker_Impl_::get();
			} else {
				#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:54: characters 22-23
				$w = $_g;
				#/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx:52: lines 52-55
				$tmp = $w;
			}
		}
		return new OutputSink($name, $target, $tmp);
	}
}

Boot::registerClass(SinkYielding_Impl_::class, 'tink.io._Sink.SinkYielding_Impl_');
