<?php
/**
 * Generated by Haxe 4.0.2
 */

namespace civo;

use \php\_Boot\HxAnon;
use \php\Boot;
use \civo\net\CivoHttp;

class Instances {
	/**
	 * @var string
	 */
	static public $path = "/instances";

	/**
	 * @param string $token
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function available_sizes ($token, $handler) {
		#src/civo/Instances.hx:15: characters 5-42
		CivoHttp::get($token, "sizes", $handler);
	}

	/**
	 * @param string $token
	 * @param object $params
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function create ($token, $params, $handler) {
		#src/civo/Instances.hx:19: characters 5-48
		CivoHttp::post($token, Instances::$path, $handler, $params);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function delete ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:31: characters 5-58
		CivoHttp::delete($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null'), $handler);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param string $firewall_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function firewall ($token, $instance_id, $firewall_id, $handler) {
		#src/civo/Instances.hx:59: characters 5-92
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/firewall", $handler, new HxAnon(["firewall_id" => $firewall_id]));
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function get ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:27: characters 5-55
		CivoHttp::get($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null'), $handler);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function hard_reboots ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:39: characters 5-69
		CivoHttp::post($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/hard_reboots", $handler);
	}

	/**
	 * @param string $token
	 * @param object $params
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function list ($token, $params, $handler) {
		#src/civo/Instances.hx:23: characters 5-47
		CivoHttp::get($token, Instances::$path, $handler, $params);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param string $ip_address
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function move_ip ($token, $instance_id, $ip_address, $handler) {
		#src/civo/Instances.hx:63: characters 5-70
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/ip/" . ($ip_address??'null'), $handler);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param string $size
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function resize ($token, $instance_id, $size, $handler) {
		#src/civo/Instances.hx:55: characters 5-76
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/resize", $handler, new HxAnon(["size" => $size]));
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param string $tags
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function retag ($token, $instance_id, $tags, $handler) {
		#src/civo/Instances.hx:35: characters 5-74
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/tags", $handler, new HxAnon(["tags" => $tags]));
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function soft_reboots ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:43: characters 5-69
		CivoHttp::post($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/soft_reboots", $handler);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function start ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:51: characters 5-61
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/start", $handler);
	}

	/**
	 * @param string $token
	 * @param string $instance_id
	 * @param \Closure $handler
	 * 
	 * @return void
	 */
	public static function stop ($token, $instance_id, $handler) {
		#src/civo/Instances.hx:47: characters 5-60
		CivoHttp::put($token, "" . (Instances::$path??'null') . "/" . ($instance_id??'null') . "/stop", $handler);
	}
}

Boot::registerClass(Instances::class, 'civo.Instances');
