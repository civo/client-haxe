// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_Dns
#include <Dns.h>
#endif
#ifndef INCLUDED_civo_net_CivoHttp
#include <civo/net/CivoHttp.h>
#endif
#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_44fa9ae89faaf49c_8_list_domains,"Dns","list_domains",0x55030093,"Dns.list_domains","Dns.hx",8,0xd27f24d5)

void Dns_obj::__construct() { }

Dynamic Dns_obj::__CreateEmpty() { return new Dns_obj; }

void *Dns_obj::_hx_vtable = 0;

Dynamic Dns_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Dns_obj > _hx_result = new Dns_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Dns_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0033f989;
}

void Dns_obj::list_domains(::String token, ::Dynamic handler){
            	HX_STACKFRAME(&_hx_pos_44fa9ae89faaf49c_8_list_domains)
HXDLIN(   8)		::civo::net::CivoHttp_obj::get(token,HX_("/dns",da,48,5d,1f),handler,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dns_obj,list_domains,(void))


Dns_obj::Dns_obj()
{
}

bool Dns_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"list_domains") ) { outValue = list_domains_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Dns_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Dns_obj_sStaticStorageInfo = 0;
#endif

hx::Class Dns_obj::__mClass;

static ::String Dns_obj_sStaticFields[] = {
	HX_("list_domains",8e,6e,a6,6b),
	::String(null())
};

void Dns_obj::__register()
{
	Dns_obj _hx_dummy;
	Dns_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Dns",89,f9,33,00);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Dns_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Dns_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Dns_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Dns_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Dns_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

