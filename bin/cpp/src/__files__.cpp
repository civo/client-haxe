// Generated by Haxe 4.0.2
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"/usr/share/haxe/std/Lambda.hx",
"/usr/share/haxe/std/StringTools.hx",
"/usr/share/haxe/std/cpp/_std/Date.hx",
"/usr/share/haxe/std/cpp/_std/EReg.hx",
"/usr/share/haxe/std/cpp/_std/Reflect.hx",
"/usr/share/haxe/std/cpp/_std/Std.hx",
"/usr/share/haxe/std/cpp/_std/StringBuf.hx",
"/usr/share/haxe/std/cpp/_std/Sys.hx",
"/usr/share/haxe/std/cpp/_std/Type.hx",
"/usr/share/haxe/std/cpp/_std/haxe/ds/StringMap.hx",
"/usr/share/haxe/std/cpp/_std/sys/FileSystem.hx",
"/usr/share/haxe/std/cpp/_std/sys/io/Process.hx",
"/usr/share/haxe/std/cpp/_std/sys/net/Host.hx",
"/usr/share/haxe/std/cpp/_std/sys/net/Socket.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Certificate.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Key.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Socket.hx",
"/usr/share/haxe/std/cpp/_std/sys/thread/Lock.hx",
"/usr/share/haxe/std/cpp/_std/sys/thread/Mutex.hx",
"/usr/share/haxe/std/haxe/EntryPoint.hx",
"/usr/share/haxe/std/haxe/MainLoop.hx",
"/usr/share/haxe/std/haxe/Timer.hx",
"/usr/share/haxe/std/haxe/ds/BalancedTree.hx",
"/usr/share/haxe/std/haxe/ds/EnumValueMap.hx",
"/usr/share/haxe/std/haxe/format/JsonParser.hx",
"/usr/share/haxe/std/haxe/format/JsonPrinter.hx",
"/usr/share/haxe/std/haxe/http/HttpBase.hx",
"/usr/share/haxe/std/haxe/io/Bytes.hx",
"/usr/share/haxe/std/haxe/io/BytesBuffer.hx",
"/usr/share/haxe/std/haxe/io/BytesOutput.hx",
"/usr/share/haxe/std/haxe/io/Eof.hx",
"/usr/share/haxe/std/haxe/io/Input.hx",
"/usr/share/haxe/std/haxe/io/Output.hx",
"/usr/share/haxe/std/haxe/io/Path.hx",
"/usr/share/haxe/std/sys/Http.hx",
"?",
"Civo.hx",
"civo/Charges.hx",
"civo/Dns.hx",
"civo/Firewalls.hx",
"civo/Instances.hx",
"civo/Kubernetes.hx",
"civo/LoadBalancers.hx",
"civo/Networks.hx",
"civo/Quota.hx",
"civo/Regions.hx",
"civo/Snapshots.hx",
"civo/Ssh.hx",
"civo/Templates.hx",
"civo/Volumes.hx",
"civo/Webhooks.hx",
"civo/net/CivoHttp.hx",
"httpstatus/HttpStatusMessage.hx",
"tink/Chunk.hx",
"tink/Url.hx",
"tink/chunk/ByteChunk.hx",
"tink/chunk/ChunkBase.hx",
"tink/chunk/ChunkCursor.hx",
"tink/core/Callback.hx",
"tink/core/Error.hx",
"tink/core/Future.hx",
"tink/core/Lazy.hx",
"tink/core/Named.hx",
"tink/core/Pair.hx",
"tink/core/Promise.hx",
"tink/http/Client.hx",
"tink/http/Fetch.hx",
"tink/http/Header.hx",
"tink/http/Message.hx",
"tink/http/Request.hx",
"tink/http/Response.hx",
"tink/http/clients/CurlClient.hx",
"tink/http/clients/LocalContainerClient.hx",
"tink/http/clients/SecureCurlClient.hx",
"tink/http/clients/SecureSocketClient.hx",
"tink/http/clients/SocketClient.hx",
"tink/http/clients/StdClient.hx",
"tink/http/containers/LocalContainer.hx",
"tink/io/PipeResult.hx",
"tink/io/Sink.hx",
"tink/io/Source.hx",
"tink/io/StreamParser.hx",
"tink/io/Worker.hx",
"tink/io/std/InputSource.hx",
"tink/io/std/OutputSink.hx",
"tink/streams/Stream.hx",
"tink/url/Host.hx",
"tink/url/Path.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"/usr/share/haxe/std/Lambda.hx",
"/usr/share/haxe/std/StringTools.hx",
"/usr/share/haxe/std/cpp/_std/Date.hx",
"/usr/share/haxe/std/cpp/_std/EReg.hx",
"/usr/share/haxe/std/cpp/_std/Reflect.hx",
"/usr/share/haxe/std/cpp/_std/Std.hx",
"/usr/share/haxe/std/cpp/_std/StringBuf.hx",
"/usr/share/haxe/std/cpp/_std/Sys.hx",
"/usr/share/haxe/std/cpp/_std/Type.hx",
"/usr/share/haxe/std/cpp/_std/haxe/ds/StringMap.hx",
"/usr/share/haxe/std/cpp/_std/sys/FileSystem.hx",
"/usr/share/haxe/std/cpp/_std/sys/io/Process.hx",
"/usr/share/haxe/std/cpp/_std/sys/net/Host.hx",
"/usr/share/haxe/std/cpp/_std/sys/net/Socket.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Certificate.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Key.hx",
"/usr/share/haxe/std/cpp/_std/sys/ssl/Socket.hx",
"/usr/share/haxe/std/cpp/_std/sys/thread/Lock.hx",
"/usr/share/haxe/std/cpp/_std/sys/thread/Mutex.hx",
"/usr/share/haxe/std/haxe/EntryPoint.hx",
"/usr/share/haxe/std/haxe/MainLoop.hx",
"/usr/share/haxe/std/haxe/Timer.hx",
"/usr/share/haxe/std/haxe/ds/BalancedTree.hx",
"/usr/share/haxe/std/haxe/ds/EnumValueMap.hx",
"/usr/share/haxe/std/haxe/format/JsonParser.hx",
"/usr/share/haxe/std/haxe/format/JsonPrinter.hx",
"/usr/share/haxe/std/haxe/http/HttpBase.hx",
"/usr/share/haxe/std/haxe/io/Bytes.hx",
"/usr/share/haxe/std/haxe/io/BytesBuffer.hx",
"/usr/share/haxe/std/haxe/io/BytesOutput.hx",
"/usr/share/haxe/std/haxe/io/Eof.hx",
"/usr/share/haxe/std/haxe/io/Input.hx",
"/usr/share/haxe/std/haxe/io/Output.hx",
"/usr/share/haxe/std/haxe/io/Path.hx",
"/usr/share/haxe/std/sys/Http.hx",
"?",
"/home/jahred/Documents/civo/client-haxe/src/Civo.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Charges.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Dns.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Firewalls.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Instances.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Kubernetes.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/LoadBalancers.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Networks.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Quota.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Regions.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Snapshots.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Ssh.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Templates.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Volumes.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/Webhooks.hx",
"/home/jahred/Documents/civo/client-haxe/src/civo/net/CivoHttp.hx",
"/home/jahred/haxelib/http-status/1,3,1/src/httpstatus/HttpStatusMessage.hx",
"/home/jahred/haxelib/tink_chunk/0,3,0/src/tink/Chunk.hx",
"/home/jahred/haxelib/tink_url/0,4,1/src/tink/Url.hx",
"/home/jahred/haxelib/tink_chunk/0,3,0/src/tink/chunk/ByteChunk.hx",
"/home/jahred/haxelib/tink_chunk/0,3,0/src/tink/chunk/ChunkBase.hx",
"/home/jahred/haxelib/tink_chunk/0,3,0/src/tink/chunk/ChunkCursor.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Callback.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Error.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Future.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Lazy.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Named.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Pair.hx",
"/home/jahred/haxelib/tink_core/1,23,0/src/tink/core/Promise.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Client.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Fetch.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Header.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Message.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Request.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/Response.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/CurlClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/LocalContainerClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/SecureCurlClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/SecureSocketClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/SocketClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/clients/StdClient.hx",
"/home/jahred/haxelib/tink_http/0,9,1/src/tink/http/containers/LocalContainer.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/PipeResult.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Sink.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Source.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/StreamParser.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/Worker.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/std/InputSource.hx",
"/home/jahred/haxelib/tink_io/0,7,1/src/tink/io/std/OutputSink.hx",
"/home/jahred/haxelib/tink_streams/0,3,2/src/tink/streams/Stream.hx",
"/home/jahred/haxelib/tink_url/0,4,1/src/tink/url/Host.hx",
"/home/jahred/haxelib/tink_url/0,4,1/src/tink/url/Path.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"Civo",
"Date",
"EReg",
"Lambda",
"Reflect",
"Std",
"StringBuf",
"StringTools",
"Sys",
"Type",
"civo.Charges",
"civo.Dns",
"civo.Firewalls",
"civo.Instances",
"civo.Kubernetes",
"civo.LoadBalancers",
"civo.Networks",
"civo.Quota",
"civo.Regions",
"civo.Snapshots",
"civo.Ssh",
"civo.Templates",
"civo.Volumes",
"civo.Webhooks",
"civo.net.CivoHttp",
"cpp.Lib",
"sys.thread.Mutex",
"sys.thread.Lock",
"haxe.EntryPoint",
"haxe.MainEvent",
"haxe.MainLoop",
"haxe.Timer",
"haxe.io.Bytes",
"haxe.ds.BalancedTree",
"haxe.ds.TreeNode",
"haxe.ds.EnumValueMap",
"haxe.ds.StringMap",
"haxe.format.JsonParser",
"haxe.format.JsonPrinter",
"haxe.http.HttpBase",
"haxe.io.BytesBuffer",
"haxe.io.Output",
"haxe.io.BytesOutput",
"haxe.io.Eof",
"haxe.io.Input",
"haxe.io.Path",
"httpstatus._HttpStatusMessage.HttpStatusMessage_Impl_",
"sys.FileSystem",
"sys.Http",
"sys.io._Process.Stdin",
"sys.io._Process.Stdout",
"sys.io.Process",
"sys.net.Host",
"sys.net._Socket.SocketInput",
"sys.net._Socket.SocketOutput",
"sys.net.Socket",
"sys.ssl.Certificate",
"sys.ssl.Key",
"sys.ssl._Socket.SocketInput",
"sys.ssl._Socket.SocketOutput",
"sys.ssl.Socket",
"tink.chunk.ChunkBase",
"tink._Chunk.EmptyChunk",
"tink._Chunk.CompoundChunk",
"tink._Chunk.Chunk_Impl_",
"tink._Url.Url_Impl_",
"tink.chunk.ByteChunk",
"tink.chunk.ChunkCursor",
"tink.core._Callback.Callback_Impl_",
"tink.core._Callback.ListCell",
"tink.core._Callback.CallbackList_Impl_",
"tink.core.TypedError",
"tink.core._Lazy.LazyConst",
"tink.core._Future.SyncFuture",
"tink.core._Future.Future_Impl_",
"tink.core._Future.SimpleFuture",
"tink.core._Future.NestedFuture",
"tink.core.FutureTrigger",
"tink.core._Future.LazyTrigger",
"tink.core._Lazy.LazyFunc",
"tink.core.NamedWith",
"tink.core.MPair",
"tink.core._Promise.Promise_Impl_",
"tink.http._Client.CustomClient",
"tink.http.Fetch",
"tink.http._Fetch.FetchResponse_Impl_",
"tink.http.Header",
"tink.http._Header.HeaderValue_Impl_",
"tink.http.HeaderField",
"tink.io.BytewiseParser",
"tink.http.HeaderParser",
"tink.http.Message",
"tink.http.RequestHeader",
"tink.http.IncomingRequestHeader",
"tink.http.OutgoingRequestHeader",
"tink.http.OutgoingRequest",
"tink.http.IncomingRequest",
"tink.http.ResponseHeaderBase",
"tink.http._Response.OutgoingResponseData",
"tink.http.IncomingResponse",
"tink.http.clients.CurlClient",
"tink.http.clients.LocalContainerClient",
"tink.http.clients.SecureCurlClient",
"tink.http.clients.SocketClient",
"tink.http.clients.SecureSocketClient",
"tink.http.clients.StdClient",
"tink.http.containers.LocalContainer",
"tink.io.PipeResultTools",
"tink.io.SinkBase",
"tink.io._Sink.SinkYielding_Impl_",
"tink.streams.StreamBase",
"tink.streams.Empty",
"tink.io._Source.Source_Impl_",
"tink.io.RealSourceTools",
"tink.io.IdealSourceTools",
"tink.io._StreamParser.StreamParser_Impl_",
"tink.io._Worker.EagerWorker",
"tink.io._Worker.Worker_Impl_",
"tink.streams.Generator",
"tink.io.std.InputSource",
"tink.io.std.OutputSink",
"tink.streams._Stream.Stream_Impl_",
"tink.streams._Stream.Regrouper_Impl_",
"tink.streams._Stream.CompoundStream",
"tink.streams._Stream.RegroupStream",
"tink.streams._Stream.CloggedStream",
"tink.streams._Stream.ErrorStream",
"tink.streams.Single",
"tink.streams._Stream.Handler_Impl_",
"tink.streams._Stream.Reducer_Impl_",
"tink.streams.FutureStream",
"tink.url._Host.Host_Impl_",
"tink.url._Path.Path_Impl_",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
