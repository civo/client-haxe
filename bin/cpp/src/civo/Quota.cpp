// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_civo_Quota
#include <civo/Quota.h>
#endif
#ifndef INCLUDED_civo_net_CivoHttp
#include <civo/net/CivoHttp.h>
#endif
#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_078e759c1453f612_18_get,"civo.Quota","get",0xe5429a71,"civo.Quota.get","civo/Quota.hx",18,0xf8b4de96)
HX_LOCAL_STACK_FRAME(_hx_pos_078e759c1453f612_15_boot,"civo.Quota","boot",0xb1be09f7,"civo.Quota.boot","civo/Quota.hx",15,0xf8b4de96)
namespace civo{

void Quota_obj::__construct() { }

Dynamic Quota_obj::__CreateEmpty() { return new Quota_obj; }

void *Quota_obj::_hx_vtable = 0;

Dynamic Quota_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Quota_obj > _hx_result = new Quota_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Quota_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a63eed9;
}

::String Quota_obj::path;

void Quota_obj::get(::String token, ::Dynamic handler){
            	HX_STACKFRAME(&_hx_pos_078e759c1453f612_18_get)
HXDLIN(  18)		::civo::net::CivoHttp_obj::get(token,::civo::Quota_obj::path,handler,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quota_obj,get,(void))


Quota_obj::Quota_obj()
{
}

bool Quota_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { outValue = ( path ); return true; }
	}
	return false;
}

bool Quota_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { path=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Quota_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Quota_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &Quota_obj::path,HX_("path",a5,e5,51,4a)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Quota_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Quota_obj::path,"path");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Quota_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Quota_obj::path,"path");
};

#endif

hx::Class Quota_obj::__mClass;

static ::String Quota_obj_sStaticFields[] = {
	HX_("path",a5,e5,51,4a),
	HX_("get",96,80,4e,00),
	::String(null())
};

void Quota_obj::__register()
{
	Quota_obj _hx_dummy;
	Quota_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("civo.Quota",c9,b0,69,9c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Quota_obj::__GetStatic;
	__mClass->mSetStaticField = &Quota_obj::__SetStatic;
	__mClass->mMarkFunc = Quota_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Quota_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Quota_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Quota_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Quota_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Quota_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Quota_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_078e759c1453f612_15_boot)
HXDLIN(  15)		path = HX_("/quota",a9,18,b8,28);
            	}
}

} // end namespace civo
