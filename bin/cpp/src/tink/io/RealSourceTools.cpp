// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_tink_chunk_ChunkObject
#include <tink/chunk/ChunkObject.h>
#endif
#ifndef INCLUDED_tink_core_MPair
#include <tink/core/MPair.h>
#endif
#ifndef INCLUDED_tink_core_Outcome
#include <tink/core/Outcome.h>
#endif
#ifndef INCLUDED_tink_core_TypedError
#include <tink/core/TypedError.h>
#endif
#ifndef INCLUDED_tink_core__Future_FutureObject
#include <tink/core/_Future/FutureObject.h>
#endif
#ifndef INCLUDED_tink_io_ParseResult
#include <tink/io/ParseResult.h>
#endif
#ifndef INCLUDED_tink_io_RealSourceTools
#include <tink/io/RealSourceTools.h>
#endif
#ifndef INCLUDED_tink_io_StreamParserObject
#include <tink/io/StreamParserObject.h>
#endif
#ifndef INCLUDED_tink_io__Source_Source_Impl_
#include <tink/io/_Source/Source_Impl_.h>
#endif
#ifndef INCLUDED_tink_io__StreamParser_StreamParser_Impl_
#include <tink/io/_StreamParser/StreamParser_Impl_.h>
#endif
#ifndef INCLUDED_tink_streams_Reduction
#include <tink/streams/Reduction.h>
#endif
#ifndef INCLUDED_tink_streams_StreamObject
#include <tink/streams/StreamObject.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_9bced4a60a0ff5b6_163_all,"tink.io.RealSourceTools","all",0xcc2c9a89,"tink.io.RealSourceTools.all","tink/io/Source.hx",163,0x6a783477)
HX_LOCAL_STACK_FRAME(_hx_pos_9bced4a60a0ff5b6_169_parse,"tink.io.RealSourceTools","parse",0x40315b9b,"tink.io.RealSourceTools.parse","tink/io/Source.hx",169,0x6a783477)
namespace tink{
namespace io{

void RealSourceTools_obj::__construct() { }

Dynamic RealSourceTools_obj::__CreateEmpty() { return new RealSourceTools_obj; }

void *RealSourceTools_obj::_hx_vtable = 0;

Dynamic RealSourceTools_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< RealSourceTools_obj > _hx_result = new RealSourceTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool RealSourceTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6708b042;
}

::Dynamic RealSourceTools_obj::all(::Dynamic s){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::tink::core::Outcome _hx_run( ::tink::streams::Reduction o){
            			HX_STACKFRAME(&_hx_pos_9bced4a60a0ff5b6_163_all)
HXDLIN( 163)			switch((int)(o->_hx_getIndex())){
            				case (int)1: {
HXLINE( 165)					 ::tink::core::TypedError e = o->_hx_getObject(0).StaticCast<  ::tink::core::TypedError >();
HXDLIN( 165)					return ::tink::core::Outcome_obj::Failure(e);
            				}
            				break;
            				case (int)2: {
HXLINE( 164)					::Dynamic c = o->_hx_getObject(0);
HXDLIN( 164)					return ::tink::core::Outcome_obj::Success(c);
            				}
            				break;
            			}
HXLINE( 163)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_9bced4a60a0ff5b6_163_all)
HXDLIN( 163)		::Dynamic ret = ::tink::core::_Future::FutureObject_obj::map(::tink::io::_Source::Source_Impl__obj::concatAll(s), ::Dynamic(new _hx_Closure_0()));
HXDLIN( 163)		return ::tink::core::_Future::FutureObject_obj::gather(ret);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(RealSourceTools_obj,all,return )

::Dynamic RealSourceTools_obj::parse(::Dynamic s,::Dynamic p){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::tink::core::Outcome _hx_run( ::tink::io::ParseResult r){
            			HX_GC_STACKFRAME(&_hx_pos_9bced4a60a0ff5b6_169_parse)
HXDLIN( 169)			switch((int)(r->_hx_getIndex())){
            				case (int)0: {
HXLINE( 170)					::Dynamic rest = r->_hx_getObject(1);
HXDLIN( 170)					 ::Dynamic data = r->_hx_getObject(0);
HXDLIN( 170)					 ::tink::core::MPair this1 =  ::tink::core::MPair_obj::__alloc( HX_CTX ,data,rest);
HXDLIN( 170)					return ::tink::core::Outcome_obj::Success(this1);
            				}
            				break;
            				case (int)1: {
HXLINE( 171)					::Dynamic _g1 = r->_hx_getObject(1);
HXDLIN( 171)					 ::tink::core::TypedError e = r->_hx_getObject(0).StaticCast<  ::tink::core::TypedError >();
HXDLIN( 171)					return ::tink::core::Outcome_obj::Failure(e);
            				}
            				break;
            				case (int)2: {
HXLINE( 171)					 ::tink::core::TypedError e1 = r->_hx_getObject(0).StaticCast<  ::tink::core::TypedError >();
HXDLIN( 171)					return ::tink::core::Outcome_obj::Failure(e1);
            				}
            				break;
            			}
HXLINE( 169)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_9bced4a60a0ff5b6_169_parse)
HXDLIN( 169)		::Dynamic ret = ::tink::core::_Future::FutureObject_obj::map(::tink::io::_StreamParser::StreamParser_Impl__obj::parse(s,p), ::Dynamic(new _hx_Closure_0()));
HXDLIN( 169)		return ::tink::core::_Future::FutureObject_obj::gather(ret);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(RealSourceTools_obj,parse,return )


RealSourceTools_obj::RealSourceTools_obj()
{
}

bool RealSourceTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"all") ) { outValue = all_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"parse") ) { outValue = parse_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *RealSourceTools_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *RealSourceTools_obj_sStaticStorageInfo = 0;
#endif

hx::Class RealSourceTools_obj::__mClass;

static ::String RealSourceTools_obj_sStaticFields[] = {
	HX_("all",21,f9,49,00),
	HX_("parse",33,90,55,bd),
	::String(null())
};

void RealSourceTools_obj::__register()
{
	RealSourceTools_obj _hx_dummy;
	RealSourceTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("tink.io.RealSourceTools",d6,2d,a0,1d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &RealSourceTools_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(RealSourceTools_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< RealSourceTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RealSourceTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RealSourceTools_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tink
} // end namespace io
