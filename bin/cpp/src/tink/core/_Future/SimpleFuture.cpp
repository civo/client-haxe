// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_tink_core_FutureTrigger
#include <tink/core/FutureTrigger.h>
#endif
#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif
#ifndef INCLUDED_tink_core__Callback_Callback_Impl_
#include <tink/core/_Callback/Callback_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Future_FutureObject
#include <tink/core/_Future/FutureObject.h>
#endif
#ifndef INCLUDED_tink_core__Future_Future_Impl_
#include <tink/core/_Future/Future_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Future_SimpleFuture
#include <tink/core/_Future/SimpleFuture.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_265_new,"tink.core._Future.SimpleFuture","new",0x0035c806,"tink.core._Future.SimpleFuture.new","tink/core/Future.hx",265,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_268_handle,"tink.core._Future.SimpleFuture","handle",0xcc2957c2,"tink.core._Future.SimpleFuture.handle","tink/core/Future.hx",268,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_272_map,"tink.core._Future.SimpleFuture","map",0x00350242,"tink.core._Future.SimpleFuture.map","tink/core/Future.hx",272,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_270_map,"tink.core._Future.SimpleFuture","map",0x00350242,"tink.core._Future.SimpleFuture.map","tink/core/Future.hx",270,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_276_flatMap,"tink.core._Future.SimpleFuture","flatMap",0x790bd309,"tink.core._Future.SimpleFuture.flatMap","tink/core/Future.hx",276,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_280_gather,"tink.core._Future.SimpleFuture","gather",0x69c84615,"tink.core._Future.SimpleFuture.gather","tink/core/Future.hx",280,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_285_eager,"tink.core._Future.SimpleFuture","eager",0x9df076de,"tink.core._Future.SimpleFuture.eager","tink/core/Future.hx",285,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_49fabd4ed3f5d920_283_eager,"tink.core._Future.SimpleFuture","eager",0x9df076de,"tink.core._Future.SimpleFuture.eager","tink/core/Future.hx",283,0x014a8a08)
namespace tink{
namespace core{
namespace _Future{

void SimpleFuture_obj::__construct( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_265_new)
HXDLIN( 265)		this->f = f;
            	}

Dynamic SimpleFuture_obj::__CreateEmpty() { return new SimpleFuture_obj; }

void *SimpleFuture_obj::_hx_vtable = 0;

Dynamic SimpleFuture_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SimpleFuture_obj > _hx_result = new SimpleFuture_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SimpleFuture_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x08ba3c9a;
}

static ::tink::core::_Future::FutureObject_obj _hx_tink_core__Future_SimpleFuture__hx_tink_core__Future_FutureObject= {
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SimpleFuture_obj::map,
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SimpleFuture_obj::flatMap,
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SimpleFuture_obj::handle,
	( ::Dynamic (hx::Object::*)())&::tink::core::_Future::SimpleFuture_obj::gather,
	( ::Dynamic (hx::Object::*)())&::tink::core::_Future::SimpleFuture_obj::eager,
};

void *SimpleFuture_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xb1c7c493: return &_hx_tink_core__Future_SimpleFuture__hx_tink_core__Future_FutureObject;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::Dynamic SimpleFuture_obj::handle( ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_268_handle)
HXDLIN( 268)		return this->f(callback);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SimpleFuture_obj,handle,return )

::Dynamic SimpleFuture_obj::map( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::tink::core::_Future::SimpleFuture,_gthis, ::Dynamic,f) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_272_map)
HXLINE( 272)				 ::Dynamic _hx_tmp = f(v);
HXDLIN( 272)				::tink::core::_Callback::Callback_Impl__obj::invoke(cb,_hx_tmp);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_272_map)
HXLINE( 272)			return _gthis->f( ::Dynamic(new _hx_Closure_0(f,cb)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_270_map)
HXDLIN( 270)		 ::tink::core::_Future::SimpleFuture _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 271)		return  ::tink::core::_Future::SimpleFuture_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(_gthis,f)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SimpleFuture_obj,map,return )

::Dynamic SimpleFuture_obj::flatMap( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::tink::core::_Future::SimpleFuture,_gthis, ::Dynamic,f1) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,cb, ::Dynamic,f1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_276_flatMap)
HXDLIN( 276)				::Dynamic _hx_tmp = f1(v);
HXDLIN( 276)				::tink::core::_Callback::Callback_Impl__obj::invoke(cb,_hx_tmp);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_276_flatMap)
HXDLIN( 276)			return _gthis->f( ::Dynamic(new _hx_Closure_0(cb,f1)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_276_flatMap)
HXDLIN( 276)		 ::Dynamic f1 = f;
HXDLIN( 276)		 ::tink::core::_Future::SimpleFuture _gthis = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 276)		return ::tink::core::_Future::Future_Impl__obj::flatten( ::tink::core::_Future::SimpleFuture_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(_gthis,f1))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SimpleFuture_obj,flatMap,return )

::Dynamic SimpleFuture_obj::gather(){
            	HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_280_gather)
HXDLIN( 280)		if (hx::IsNotNull( this->gathered )) {
HXDLIN( 280)			return this->gathered;
            		}
            		else {
HXLINE( 281)			return (this->gathered = ::tink::core::FutureTrigger_obj::gatherFuture(hx::ObjectPtr<OBJ_>(this)));
            		}
HXLINE( 280)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(SimpleFuture_obj,gather,return )

::Dynamic SimpleFuture_obj::eager(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_285_eager)
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_49fabd4ed3f5d920_283_eager)
HXLINE( 284)		::Dynamic ret;
HXDLIN( 284)		if (hx::IsNotNull( this->gathered )) {
HXLINE( 284)			ret = this->gathered;
            		}
            		else {
HXLINE( 284)			ret = (this->gathered = ::tink::core::FutureTrigger_obj::gatherFuture(hx::ObjectPtr<OBJ_>(this)));
            		}
HXLINE( 285)		::tink::core::_Future::FutureObject_obj::handle(ret,::tink::core::_Callback::Callback_Impl__obj::fromNiladic( ::Dynamic(new _hx_Closure_0())));
HXLINE( 286)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(SimpleFuture_obj,eager,return )


hx::ObjectPtr< SimpleFuture_obj > SimpleFuture_obj::__new( ::Dynamic f) {
	hx::ObjectPtr< SimpleFuture_obj > __this = new SimpleFuture_obj();
	__this->__construct(f);
	return __this;
}

hx::ObjectPtr< SimpleFuture_obj > SimpleFuture_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic f) {
	SimpleFuture_obj *__this = (SimpleFuture_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SimpleFuture_obj), true, "tink.core._Future.SimpleFuture"));
	*(void **)__this = SimpleFuture_obj::_hx_vtable;
	__this->__construct(f);
	return __this;
}

SimpleFuture_obj::SimpleFuture_obj()
{
}

void SimpleFuture_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SimpleFuture);
	HX_MARK_MEMBER_NAME(f,"f");
	HX_MARK_MEMBER_NAME(gathered,"gathered");
	HX_MARK_END_CLASS();
}

void SimpleFuture_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(f,"f");
	HX_VISIT_MEMBER_NAME(gathered,"gathered");
}

hx::Val SimpleFuture_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"f") ) { return hx::Val( f ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"eager") ) { return hx::Val( eager_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle_dyn() ); }
		if (HX_FIELD_EQ(inName,"gather") ) { return hx::Val( gather_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"flatMap") ) { return hx::Val( flatMap_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"gathered") ) { return hx::Val( gathered ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val SimpleFuture_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"f") ) { f=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"gathered") ) { gathered=inValue.Cast< ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SimpleFuture_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("gathered",1a,7f,19,4b));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo SimpleFuture_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(SimpleFuture_obj,f),HX_("f",66,00,00,00)},
	{hx::fsObject /* ::Dynamic */ ,(int)offsetof(SimpleFuture_obj,gathered),HX_("gathered",1a,7f,19,4b)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *SimpleFuture_obj_sStaticStorageInfo = 0;
#endif

static ::String SimpleFuture_obj_sMemberFields[] = {
	HX_("f",66,00,00,00),
	HX_("gathered",1a,7f,19,4b),
	HX_("handle",a8,83,fd,b7),
	HX_("map",9c,0a,53,00),
	HX_("flatMap",63,10,de,e6),
	HX_("gather",fb,71,9c,55),
	HX_("eager",b8,c9,e4,67),
	::String(null()) };

hx::Class SimpleFuture_obj::__mClass;

void SimpleFuture_obj::__register()
{
	SimpleFuture_obj _hx_dummy;
	SimpleFuture_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("tink.core._Future.SimpleFuture",14,0d,ec,c1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SimpleFuture_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SimpleFuture_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SimpleFuture_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SimpleFuture_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tink
} // end namespace core
} // end namespace _Future
