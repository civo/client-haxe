// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif
#ifndef INCLUDED_tink_core__Callback_Callback_Impl_
#include <tink/core/_Callback/Callback_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Future_FutureObject
#include <tink/core/_Future/FutureObject.h>
#endif
#ifndef INCLUDED_tink_core__Future_SimpleFuture
#include <tink/core/_Future/SimpleFuture.h>
#endif
#ifndef INCLUDED_tink_core__Future_SyncFuture
#include <tink/core/_Future/SyncFuture.h>
#endif
#ifndef INCLUDED_tink_core__Lazy_LazyObject
#include <tink/core/_Lazy/LazyObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_448922c2a2e83979_236_new,"tink.core._Future.SyncFuture","new",0xec623daf,"tink.core._Future.SyncFuture.new","tink/core/Future.hx",236,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_239_map,"tink.core._Future.SyncFuture","map",0xec6177eb,"tink.core._Future.SyncFuture.map","tink/core/Future.hx",239,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_244_flatMap,"tink.core._Future.SyncFuture","flatMap",0x1bced132,"tink.core._Future.SyncFuture.flatMap","tink/core/Future.hx",244,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_242_flatMap,"tink.core._Future.SyncFuture","flatMap",0x1bced132,"tink.core._Future.SyncFuture.flatMap","tink/core/Future.hx",242,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_247_handle,"tink.core._Future.SyncFuture","handle",0x892911b9,"tink.core._Future.SyncFuture.handle","tink/core/Future.hx",247,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_253_eager,"tink.core._Future.SyncFuture","eager",0x466468c7,"tink.core._Future.SyncFuture.eager","tink/core/Future.hx",253,0x014a8a08)
HX_LOCAL_STACK_FRAME(_hx_pos_448922c2a2e83979_256_gather,"tink.core._Future.SyncFuture","gather",0x26c8000c,"tink.core._Future.SyncFuture.gather","tink/core/Future.hx",256,0x014a8a08)
namespace tink{
namespace core{
namespace _Future{

void SyncFuture_obj::__construct(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_448922c2a2e83979_236_new)
HXDLIN( 236)		this->value = value;
            	}

Dynamic SyncFuture_obj::__CreateEmpty() { return new SyncFuture_obj; }

void *SyncFuture_obj::_hx_vtable = 0;

Dynamic SyncFuture_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SyncFuture_obj > _hx_result = new SyncFuture_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SyncFuture_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7f89d4cb;
}

static ::tink::core::_Future::FutureObject_obj _hx_tink_core__Future_SyncFuture__hx_tink_core__Future_FutureObject= {
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SyncFuture_obj::map,
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SyncFuture_obj::flatMap,
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Future::SyncFuture_obj::handle,
	( ::Dynamic (hx::Object::*)())&::tink::core::_Future::SyncFuture_obj::gather_73f727cb,
	( ::Dynamic (hx::Object::*)())&::tink::core::_Future::SyncFuture_obj::eager_73f727cb,
};

::Dynamic SyncFuture_obj::eager_73f727cb() {
			return eager();
}

::Dynamic SyncFuture_obj::gather_73f727cb() {
			return gather();
}
void *SyncFuture_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xb1c7c493: return &_hx_tink_core__Future_SyncFuture__hx_tink_core__Future_FutureObject;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::Dynamic SyncFuture_obj::map( ::Dynamic f){
            	HX_GC_STACKFRAME(&_hx_pos_448922c2a2e83979_239_map)
HXDLIN( 239)		return  ::tink::core::_Future::SyncFuture_obj::__alloc( HX_CTX ,::tink::core::_Lazy::LazyObject_obj::map(this->value,f));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SyncFuture_obj,map,return )

::Dynamic SyncFuture_obj::flatMap( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Dynamic,l) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_STACKFRAME(&_hx_pos_448922c2a2e83979_244_flatMap)
HXLINE( 244)			return ::tink::core::_Future::FutureObject_obj::handle(::tink::core::_Lazy::LazyObject_obj::get(l),cb);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_448922c2a2e83979_242_flatMap)
HXLINE( 243)		::Dynamic l = ::tink::core::_Lazy::LazyObject_obj::map(this->value,f);
HXLINE( 242)		return  ::tink::core::_Future::SimpleFuture_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0(l)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SyncFuture_obj,flatMap,return )

::Dynamic SyncFuture_obj::handle( ::Dynamic cb){
            	HX_STACKFRAME(&_hx_pos_448922c2a2e83979_247_handle)
HXLINE( 248)		::tink::core::_Callback::Callback_Impl__obj::invoke(cb,::tink::core::_Lazy::LazyObject_obj::get(this->value));
HXLINE( 249)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(SyncFuture_obj,handle,return )

 ::tink::core::_Future::SyncFuture SyncFuture_obj::eager(){
            	HX_STACKFRAME(&_hx_pos_448922c2a2e83979_253_eager)
HXDLIN( 253)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(SyncFuture_obj,eager,return )

 ::tink::core::_Future::SyncFuture SyncFuture_obj::gather(){
            	HX_STACKFRAME(&_hx_pos_448922c2a2e83979_256_gather)
HXDLIN( 256)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(SyncFuture_obj,gather,return )


hx::ObjectPtr< SyncFuture_obj > SyncFuture_obj::__new(::Dynamic value) {
	hx::ObjectPtr< SyncFuture_obj > __this = new SyncFuture_obj();
	__this->__construct(value);
	return __this;
}

hx::ObjectPtr< SyncFuture_obj > SyncFuture_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic value) {
	SyncFuture_obj *__this = (SyncFuture_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SyncFuture_obj), true, "tink.core._Future.SyncFuture"));
	*(void **)__this = SyncFuture_obj::_hx_vtable;
	__this->__construct(value);
	return __this;
}

SyncFuture_obj::SyncFuture_obj()
{
}

void SyncFuture_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SyncFuture);
	HX_MARK_MEMBER_NAME(value,"value");
	HX_MARK_END_CLASS();
}

void SyncFuture_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(value,"value");
}

hx::Val SyncFuture_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		if (HX_FIELD_EQ(inName,"eager") ) { return hx::Val( eager_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle_dyn() ); }
		if (HX_FIELD_EQ(inName,"gather") ) { return hx::Val( gather_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"flatMap") ) { return hx::Val( flatMap_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val SyncFuture_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SyncFuture_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("value",71,7f,b8,31));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo SyncFuture_obj_sMemberStorageInfo[] = {
	{hx::fsObject /* ::Dynamic */ ,(int)offsetof(SyncFuture_obj,value),HX_("value",71,7f,b8,31)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *SyncFuture_obj_sStaticStorageInfo = 0;
#endif

static ::String SyncFuture_obj_sMemberFields[] = {
	HX_("value",71,7f,b8,31),
	HX_("map",9c,0a,53,00),
	HX_("flatMap",63,10,de,e6),
	HX_("handle",a8,83,fd,b7),
	HX_("eager",b8,c9,e4,67),
	HX_("gather",fb,71,9c,55),
	::String(null()) };

hx::Class SyncFuture_obj::__mClass;

void SyncFuture_obj::__register()
{
	SyncFuture_obj _hx_dummy;
	SyncFuture_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("tink.core._Future.SyncFuture",3d,3a,90,e8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SyncFuture_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SyncFuture_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SyncFuture_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SyncFuture_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tink
} // end namespace core
} // end namespace _Future
