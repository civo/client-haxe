// Generated by Haxe 4.0.2
#ifndef INCLUDED_tink_core__Lazy_LazyObject
#define INCLUDED_tink_core__Lazy_LazyObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(tink,core,_Lazy,LazyObject)

namespace tink{
namespace core{
namespace _Lazy{


class HXCPP_CLASS_ATTRIBUTES LazyObject_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		 ::Dynamic (hx::Object :: *_hx_get)(); 
		static inline  ::Dynamic get( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Lazy::LazyObject_obj *>(_hx_.mPtr->_hx_getInterface(0xe1200775)))->_hx_get)();
		}
		::Dynamic (hx::Object :: *_hx_map)( ::Dynamic f); 
		static inline ::Dynamic map( ::Dynamic _hx_, ::Dynamic f) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Lazy::LazyObject_obj *>(_hx_.mPtr->_hx_getInterface(0xe1200775)))->_hx_map)(f);
		}
};

} // end namespace tink
} // end namespace core
} // end namespace _Lazy

#endif /* INCLUDED_tink_core__Lazy_LazyObject */ 
