// Generated by Haxe 4.0.2
#ifndef INCLUDED_tink_core__Future_FutureObject
#define INCLUDED_tink_core__Future_FutureObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(tink,core,LinkObject)
HX_DECLARE_CLASS3(tink,core,_Future,FutureObject)

namespace tink{
namespace core{
namespace _Future{


class HXCPP_CLASS_ATTRIBUTES FutureObject_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		::Dynamic (hx::Object :: *_hx_map)( ::Dynamic f); 
		static inline ::Dynamic map( ::Dynamic _hx_, ::Dynamic f) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Future::FutureObject_obj *>(_hx_.mPtr->_hx_getInterface(0xb1c7c493)))->_hx_map)(f);
		}
		::Dynamic (hx::Object :: *_hx_flatMap)( ::Dynamic f); 
		static inline ::Dynamic flatMap( ::Dynamic _hx_, ::Dynamic f) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Future::FutureObject_obj *>(_hx_.mPtr->_hx_getInterface(0xb1c7c493)))->_hx_flatMap)(f);
		}
		::Dynamic (hx::Object :: *_hx_handle)( ::Dynamic callback); 
		static inline ::Dynamic handle( ::Dynamic _hx_, ::Dynamic callback) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Future::FutureObject_obj *>(_hx_.mPtr->_hx_getInterface(0xb1c7c493)))->_hx_handle)(callback);
		}
		::Dynamic (hx::Object :: *_hx_gather)(); 
		static inline ::Dynamic gather( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Future::FutureObject_obj *>(_hx_.mPtr->_hx_getInterface(0xb1c7c493)))->_hx_gather)();
		}
		::Dynamic (hx::Object :: *_hx_eager)(); 
		static inline ::Dynamic eager( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( hx::interface_cast< ::tink::core::_Future::FutureObject_obj *>(_hx_.mPtr->_hx_getInterface(0xb1c7c493)))->_hx_eager)();
		}
};

} // end namespace tink
} // end namespace core
} // end namespace _Future

#endif /* INCLUDED_tink_core__Future_FutureObject */ 
