// Generated by Haxe 4.0.2
#ifndef INCLUDED_tink_core_Noise
#define INCLUDED_tink_core_Noise

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(tink,core,Noise)
namespace tink{
namespace core{


class Noise_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Noise_obj OBJ_;

	public:
		Noise_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("tink.core.Noise",27,c1,0d,42); }
		::String __ToString() const { return HX_("Noise.",74,8b,0f,5f) + _hx_tag; }

		static ::tink::core::Noise Noise;
		static inline ::tink::core::Noise Noise_dyn() { return Noise; }
};

} // end namespace tink
} // end namespace core

#endif /* INCLUDED_tink_core_Noise */ 
