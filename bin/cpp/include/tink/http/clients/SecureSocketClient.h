// Generated by Haxe 4.0.2
#ifndef INCLUDED_tink_http_clients_SecureSocketClient
#define INCLUDED_tink_http_clients_SecureSocketClient

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_tink_http_clients_SocketClient
#include <tink/http/clients/SocketClient.h>
#endif
HX_DECLARE_CLASS2(tink,http,ClientObject)
HX_DECLARE_CLASS3(tink,http,clients,SecureSocketClient)
HX_DECLARE_CLASS3(tink,http,clients,SocketClient)
HX_DECLARE_CLASS2(tink,io,WorkerObject)

namespace tink{
namespace http{
namespace clients{


class HXCPP_CLASS_ATTRIBUTES SecureSocketClient_obj : public  ::tink::http::clients::SocketClient_obj
{
	public:
		typedef  ::tink::http::clients::SocketClient_obj super;
		typedef SecureSocketClient_obj OBJ_;
		SecureSocketClient_obj();

	public:
		enum { _hx_ClassId = 0x0722789b };

		void __construct(::Dynamic worker);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="tink.http.clients.SecureSocketClient")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"tink.http.clients.SecureSocketClient"); }
		static hx::ObjectPtr< SecureSocketClient_obj > __new(::Dynamic worker);
		static hx::ObjectPtr< SecureSocketClient_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic worker);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SecureSocketClient_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SecureSocketClient",95,39,12,56); }

};

} // end namespace tink
} // end namespace http
} // end namespace clients

#endif /* INCLUDED_tink_http_clients_SecureSocketClient */ 
