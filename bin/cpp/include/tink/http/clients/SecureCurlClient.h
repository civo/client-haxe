// Generated by Haxe 4.0.2
#ifndef INCLUDED_tink_http_clients_SecureCurlClient
#define INCLUDED_tink_http_clients_SecureCurlClient

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_tink_http_clients_CurlClient
#include <tink/http/clients/CurlClient.h>
#endif
HX_DECLARE_CLASS2(tink,http,ClientObject)
HX_DECLARE_CLASS3(tink,http,clients,CurlClient)
HX_DECLARE_CLASS3(tink,http,clients,SecureCurlClient)
HX_DECLARE_CLASS2(tink,streams,StreamObject)

namespace tink{
namespace http{
namespace clients{


class HXCPP_CLASS_ATTRIBUTES SecureCurlClient_obj : public  ::tink::http::clients::CurlClient_obj
{
	public:
		typedef  ::tink::http::clients::CurlClient_obj super;
		typedef SecureCurlClient_obj OBJ_;
		SecureCurlClient_obj();

	public:
		enum { _hx_ClassId = 0x2152ef54 };

		void __construct( ::Dynamic curl);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="tink.http.clients.SecureCurlClient")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"tink.http.clients.SecureCurlClient"); }
		static hx::ObjectPtr< SecureCurlClient_obj > __new( ::Dynamic curl);
		static hx::ObjectPtr< SecureCurlClient_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic curl);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SecureCurlClient_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SecureCurlClient",ce,9d,1e,a3); }

};

} // end namespace tink
} // end namespace http
} // end namespace clients

#endif /* INCLUDED_tink_http_clients_SecureCurlClient */ 
