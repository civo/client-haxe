// Generated by Haxe 4.0.2
#ifndef INCLUDED_civo_Webhooks
#define INCLUDED_civo_Webhooks

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(civo,Webhooks)

namespace civo{


class HXCPP_CLASS_ATTRIBUTES Webhooks_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Webhooks_obj OBJ_;
		Webhooks_obj();

	public:
		enum { _hx_ClassId = 0x06431be3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="civo.Webhooks")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"civo.Webhooks"); }

		inline static hx::ObjectPtr< Webhooks_obj > __new() {
			hx::ObjectPtr< Webhooks_obj > __this = new Webhooks_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< Webhooks_obj > __alloc(hx::Ctx *_hx_ctx) {
			Webhooks_obj *__this = (Webhooks_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Webhooks_obj), false, "civo.Webhooks"));
			*(void **)__this = Webhooks_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Webhooks_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Webhooks",3c,9a,75,32); }

		static void __boot();
		static ::String path;
		static void create(::String token, ::Dynamic params, ::Dynamic handler);
		static ::Dynamic create_dyn();

		static void list(::String token, ::Dynamic handler);
		static ::Dynamic list_dyn();

		static void update(::String token,::String webhook_id, ::Dynamic params, ::Dynamic handler);
		static ::Dynamic update_dyn();

		static void test(::String token,::String webhook_id, ::Dynamic handler);
		static ::Dynamic test_dyn();

		static void _hx_delete(::String token,::String webhook_id, ::Dynamic handler);
		static ::Dynamic _hx_delete_dyn();

};

} // end namespace civo

#endif /* INCLUDED_civo_Webhooks */ 
