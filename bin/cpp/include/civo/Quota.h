// Generated by Haxe 4.0.2
#ifndef INCLUDED_civo_Quota
#define INCLUDED_civo_Quota

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(civo,Quota)

namespace civo{


class HXCPP_CLASS_ATTRIBUTES Quota_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Quota_obj OBJ_;
		Quota_obj();

	public:
		enum { _hx_ClassId = 0x4a63eed9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="civo.Quota")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"civo.Quota"); }

		inline static hx::ObjectPtr< Quota_obj > __new() {
			hx::ObjectPtr< Quota_obj > __this = new Quota_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< Quota_obj > __alloc(hx::Ctx *_hx_ctx) {
			Quota_obj *__this = (Quota_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Quota_obj), false, "civo.Quota"));
			*(void **)__this = Quota_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Quota_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Quota",18,93,1f,f1); }

		static void __boot();
		static ::String path;
		static void get(::String token, ::Dynamic handler);
		static ::Dynamic get_dyn();

};

} // end namespace civo

#endif /* INCLUDED_civo_Quota */ 
