package civo;

import civo.net.CivoHttp;

/*
  Instances are built from a template. Templates may be either a 
  base OS install such as Ubuntu 14.04 LTS, a control-panel based 
  hosting setup or a fully setup application ready to configure 
  for your use.
*/

@:expose
class Templates {
  static var path = '/templates';

  static public function create(token: String, params: TemplateParams, handler: Int -> Dynamic -> Void) {
    CivoHttp.post(token, path, handler, params);
  }

  static public function update(token: String, template_id: String, params: TemplateParams, handler: Int -> Dynamic -> Void) {
    CivoHttp.put(token, '$path/$template_id', handler, params);
  }

  static public function list(token: String, handler: Int -> Dynamic -> Void) {
    CivoHttp.get(token, path, handler);
  }

  static public function delete(token: String, template_id: String, handler: Int -> Dynamic -> Void) {
    CivoHttp.delete(token, '$path/$template_id', handler);
  }
}

typedef TemplateParams = {
  code: String,                 // This is a unqiue, alphanumerical, short, human readable code for the template (required).
  ?id: String,                  // This is a short identifier for the template, it should be lowercase letters, dashs, underscores, full stop/periods and numbers only (optional: defaults to a new UUID).
  ?name: String,                // This is a short human readable name for the template (optional).
  ?volume_id: String,           // This is the ID of a bootable volume, either owned by you or global (optional; but must be specified if no template_id is specified).
  ?image_id: String,            // This is the Openstack Glance Image ID or the ID of another template, either owned by you or global (optional; but must be specified if no volume_id is specified).
  ?short_description: String,   // A one line description of the template (optional)
  ?description: String,         // A multi-line description of the template, in Markdown format (optional).
  ?default_username: String,    // The default username to suggest that the user creates (optional: defaults to civo).
  ?cloud_config: String         // Commonly referred to as 'user-data', this is a customisation script that is run after the instance is first booted. We recommend using cloud-config as it's a great distribution-agnostic way of configuring cloud servers. If you put $INITIAL_USER in your script, this will automatically be replaced by the initial user chosen when creating the instance, $INITIAL_PASSWORD will be replaced with the random password generated by the system, $HOSTNAME is the fully qualified domain name of the instance and $SSH_KEY will be the content of the SSH public key. (this is technically optional, but you won't really be able to use instances without it - see our learn guide on templates for more information)
}